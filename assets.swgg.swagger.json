{
    "basePath": "/",
    "definitions": {
        "google-maps.GeolocationV1Geolocate": {
            "properties": {
                "carrier": {
                    "description": "The carrier name.",
                    "type": "string"
                },
                "cellTowers": {
                    "default": [
                        {
                            "cellId": 0,
                            "locationAreaCode": 123,
                            "mobileCountryCode": 123,
                            "mobileNetworkCode": 123
                        }
                    ],
                    "description": "An array of cell tower objects.\n\nhttps://developers.google.com/maps/documentation/geolocation/intro#cell_tower_object",
                    "items": {
                        "$ref": "#/definitions/google-maps.GeolocationV1GeolocateCellTower"
                    },
                    "type": "array"
                },
                "homeMobileCountryCode": {
                    "description": "The mobile country code (MCC) for the device's home network.",
                    "type": "integer"
                },
                "homeMobileNetworkCode": {
                    "description": "The mobile network code (MNC) for the device's home network.",
                    "type": "integer"
                },
                "radioType": {
                    "description": "The mobile radio type. Supported values are lte, gsm, cdma, and wcdma. While this field is optional, it should be included if a value is available, for more accurate results.",
                    "enum": [
                        "lte",
                        "gsm",
                        "cdma",
                        "wcdma"
                    ],
                    "type": "string"
                },
                "wifiAccessPoints": {
                    "default": [
                        {
                            "macAddress": "00:00:00:00:00:00"
                        }
                    ],
                    "description": "An array of WiFi access point objects.\n\nhttps://developers.google.com/maps/documentation/geolocation/intro#wifi_access_point_object",
                    "items": {
                        "$ref": "#/definitions/google-maps.GeolocationV1GeolocateWifiAccessPoint"
                    },
                    "type": "array"
                }
            },
            "x-swgg-tags0": "google-maps"
        },
        "google-maps.GeolocationV1GeolocateCellTower": {
            "properties": {
                "age": {
                    "description": "The number of milliseconds since this cell was primary. If age is 0, the cellId represents a current measurement.",
                    "type": "integer"
                },
                "cellId": {
                    "description": "Unique identifier of the cell. On GSM, this is the Cell ID (CID); CDMA networks use the Base Station ID (BID). WCDMA networks use the UTRAN/GERAN Cell Identity (UC-Id), which is a 32-bit value concatenating the Radio Network Controller (RNC) and Cell ID. Specifying only the 16-bit Cell ID value in WCDMA networks may return inaccurate results.",
                    "type": "integer"
                },
                "locationAreaCode": {
                    "description": "The Location Area Code (LAC) for GSM and WCDMA networks. The Network ID (NID) for CDMA networks.",
                    "type": "integer"
                },
                "mobileCountryCode": {
                    "description": "The cell tower's Mobile Country Code (MCC).",
                    "type": "integer"
                },
                "mobileNetworkCode": {
                    "description": "The cell tower's Mobile Network Code. This is the MNC for GSM and WCDMA; CDMA uses the System ID (SID).",
                    "type": "integer"
                },
                "signalStrength": {
                    "description": "Radio signal strength measured in dBm.",
                    "type": "integer"
                },
                "timingAdvance": {
                    "description": "The timing advance value.\n\nhttps://en.wikipedia.org/wiki/Timing_advance",
                    "type": "integer"
                }
            },
            "required": [
                "cellId",
                "locationAreaCode",
                "mobileCountryCode",
                "mobileNetworkCode"
            ],
            "x-swgg-tags0": "google-maps"
        },
        "google-maps.GeolocationV1GeolocateWifiAccessPoint": {
            "properties": {
                "age": {
                    "description": "The number of milliseconds since this access point was detected.",
                    "type": "integer"
                },
                "channel": {
                    "description": "The channel over which the client is communicating with the access point.",
                    "type": "integer"
                },
                "macAddress": {
                    "description": "The MAC address of the WiFi node. Separators must be : (colon).",
                    "type": "string"
                },
                "signalStrength": {
                    "description": "The current signal strength measured in dBm.",
                    "type": "integer"
                },
                "signalToNoiseRatio": {
                    "description": "The current signal to noise ratio measured in dB.",
                    "type": "integer"
                }
            },
            "required": [
                "macAddress"
            ],
            "x-swgg-tags0": "google-maps"
        }
    },
    "externalDocs": {
        "description": "find out more about github-migrations's web-apis",
        "url": "https://console.developers.google.com/apis/library"
    },
    "info": {
        "description": "this zero-dependency package will provide a swagger-client for github-migrations's web-apis, with a working web-demo",
        "title": "swgg-github-migrations",
        "version": "2018.1.13",
        "x-swgg-downloadStandaloneApp": "https://kaizhu256.github.io/node-swgg-github-migrations/build..beta..travis-ci.org/app/assets.app.js",
        "x-swgg-homepage": "https://github.com/kaizhu256/node-swgg-github-migrations"
    },
    "parameters": {
        "github-migrations.key": {
            "default": "xxxxxxxx",
            "description": "A valid API key to handle requests for this API. If you are using OAuth 2.0 service account credentials (recommended), do not supply this parameter.",
            "in": "query",
            "name": "key",
            "type": "string",
            "x-swgg-apiKey": true
        },
        "google-maps.language": {
            "description": "The language in which to return results.\n\nhttps://developers.google.com/maps/faq#languagesupport",
            "enum": [
                "ar",
                "bg",
                "bn",
                "ca",
                "cs",
                "da",
                "de",
                "el",
                "en",
                "en-AU",
                "en-GB",
                "es",
                "eu",
                "fa",
                "fi",
                "fil",
                "fr",
                "gl",
                "gu",
                "hi",
                "hr",
                "hu",
                "id",
                "it",
                "iw",
                "ja",
                "kn",
                "ko",
                "lt",
                "lv",
                "ml",
                "mr",
                "nl",
                "no",
                "pl",
                "pt",
                "pt-BR",
                "pt-PT",
                "ro",
                "ru",
                "sk",
                "sl",
                "sr",
                "sv",
                "ta",
                "te",
                "th",
                "tl",
                "tr",
                "uk",
                "vi",
                "zh-CN",
                "zh-TW"
            ],
            "in": "query",
            "name": "language",
            "type": "string",
            "x-swgg-tags0": "google-maps"
        },
        "google-maps.maxprice": {
            "description": "Restricts results to only those places within the specified range. Valid values range between 0 (most affordable) to 4 (most expensive), inclusive. The exact amount indicated by a specific value will vary from region to region.",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "in": "query",
            "name": "maxprice",
            "type": "integer",
            "x-swgg-tags0": "google-maps"
        },
        "google-maps.minprice": {
            "description": "Restricts results to only those places within the specified range. Valid values range between 0 (most affordable) to 4 (most expensive), inclusive. The exact amount indicated by a specific value will vary from region to region.",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "in": "query",
            "name": "minprice",
            "type": "integer",
            "x-swgg-tags0": "google-maps"
        },
        "google-maps.region": {
            "description": "The region code, specified as a ccTLD (\"top-level domain\") two-character value.\n\nhttps://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains",
            "enum": [
                "ac",
                "ad",
                "ae",
                "af",
                "ag",
                "ai",
                "al",
                "am",
                "an",
                "ao",
                "aq",
                "ar",
                "as",
                "at",
                "au",
                "aw",
                "ax",
                "az",
                "ba",
                "bb",
                "bd",
                "be",
                "bf",
                "bg",
                "bh",
                "bi",
                "bj",
                "bl",
                "bm",
                "bn",
                "bo",
                "bq",
                "br",
                "bs",
                "bt",
                "bv",
                "bw",
                "by",
                "bz",
                "ca",
                "cc",
                "cd",
                "cf",
                "cg",
                "ch",
                "ci",
                "ck",
                "cl",
                "cm",
                "cn",
                "co",
                "cr",
                "cu",
                "cv",
                "cw",
                "cx",
                "cy",
                "cz",
                "de",
                "dj",
                "dk",
                "dm",
                "do",
                "dz",
                "ec",
                "ee",
                "eg",
                "eh",
                "er",
                "es",
                "et",
                "eu",
                "fi",
                "fj",
                "fk",
                "fm",
                "fo",
                "fr",
                "ga",
                "gb",
                "gd",
                "ge",
                "gf",
                "gg",
                "gh",
                "gi",
                "gl",
                "gm",
                "gn",
                "gp",
                "gq",
                "gr",
                "gs",
                "gt",
                "gu",
                "gw",
                "gy",
                "hk",
                "hm",
                "hn",
                "hr",
                "ht",
                "hu",
                "id",
                "ie",
                "il",
                "im",
                "in",
                "io",
                "iq",
                "ir",
                "is",
                "it",
                "je",
                "jm",
                "jo",
                "jp",
                "ke",
                "kg",
                "kh",
                "ki",
                "km",
                "kn",
                "kp",
                "kr",
                "kw",
                "ky",
                "kz",
                "la",
                "lb",
                "lc",
                "li",
                "lk",
                "lr",
                "ls",
                "lt",
                "lu",
                "lv",
                "ly",
                "ma",
                "mc",
                "md",
                "me",
                "mf",
                "mg",
                "mh",
                "mk",
                "ml",
                "mm",
                "mn",
                "mo",
                "mp",
                "mq",
                "mr",
                "ms",
                "mt",
                "mu",
                "mv",
                "mw",
                "mx",
                "my",
                "mz",
                "na",
                "nc",
                "ne",
                "nf",
                "ng",
                "ni",
                "nl",
                "no",
                "np",
                "nr",
                "nu",
                "nz",
                "om",
                "pa",
                "pe",
                "pf",
                "pg",
                "ph",
                "pk",
                "pl",
                "pm",
                "pn",
                "pr",
                "ps",
                "pt",
                "pw",
                "py",
                "qa",
                "re",
                "ro",
                "rs",
                "ru",
                "rw",
                "sa",
                "sb",
                "sc",
                "sd",
                "se",
                "sg",
                "sh",
                "si",
                "sj",
                "sk",
                "sl",
                "sm",
                "sn",
                "so",
                "sr",
                "ss",
                "st",
                "su",
                "sv",
                "sx",
                "sy",
                "sz",
                "tc",
                "td",
                "tf",
                "tg",
                "th",
                "tj",
                "tk",
                "tl",
                "tm",
                "tn",
                "to",
                "tp",
                "tr",
                "tt",
                "tv",
                "tw",
                "tz",
                "ua",
                "ug",
                "uk",
                "um",
                "us",
                "uy",
                "uz",
                "va",
                "vc",
                "ve",
                "vg",
                "vi",
                "vn",
                "vu",
                "wf",
                "ws",
                "ye",
                "yt",
                "za",
                "zm",
                "zw"
            ],
            "in": "query",
            "name": "region",
            "type": "string",
            "x-swgg-tags0": "google-maps"
        },
        "google-maps.type": {
            "description": "Restricts the results to places matching the specified type. Only one type may be specified (if more than one type is provided, all types following the first entry are ignored).\n\nhttps://developers.google.com/places/web-service/supported_types",
            "enum": [
                "accounting",
                "airport",
                "amusement_park",
                "aquarium",
                "art_gallery",
                "atm",
                "bakery",
                "bank",
                "bar",
                "beauty_salon",
                "bicycle_store",
                "book_store",
                "bowling_alley",
                "bus_station",
                "cafe",
                "campground",
                "car_dealer",
                "car_rental",
                "car_repair",
                "car_wash",
                "casino",
                "cemetery",
                "church",
                "city_hall",
                "clothing_store",
                "convenience_store",
                "courthouse",
                "dentist",
                "department_store",
                "doctor",
                "electrician",
                "electronics_store",
                "embassy",
                "establishment",
                "finance",
                "fire_station",
                "florist",
                "food",
                "funeral_home",
                "furniture_store",
                "gas_station",
                "general_contractor",
                "grocery_or_supermarket",
                "gym",
                "hair_care",
                "hardware_store",
                "health",
                "hindu_temple",
                "home_goods_store",
                "hospital",
                "insurance_agency",
                "jewelry_store",
                "laundry",
                "lawyer",
                "library",
                "liquor_store",
                "local_government_office",
                "locksmith",
                "lodging",
                "meal_delivery",
                "meal_takeaway",
                "mosque",
                "movie_rental",
                "movie_theater",
                "moving_company",
                "museum",
                "night_club",
                "painter",
                "park",
                "parking",
                "pet_store",
                "pharmacy",
                "physiotherapist",
                "place_of_worship",
                "plumber",
                "police",
                "post_office",
                "real_estate_agency",
                "restaurant",
                "roofing_contractor",
                "rv_park",
                "school",
                "shoe_store",
                "shopping_mall",
                "spa",
                "stadium",
                "storage",
                "store",
                "subway_station",
                "synagogue",
                "taxi_stand",
                "train_station",
                "transit_station",
                "travel_agency",
                "university",
                "veterinary_care",
                "zoo"
            ],
            "in": "query",
            "name": "type",
            "type": "string",
            "x-swgg-tags0": "google-maps"
        },
        "google-translate.language": {
            "description": "https://cloud.google.com/translate/docs/languages",
            "enum": [
                "af",
                "sq",
                "am",
                "ar",
                "hy",
                "az",
                "eu",
                "be",
                "bn",
                "bs",
                "bg",
                "ca",
                "ceb",
                "zh-CN",
                "zh-TW",
                "co",
                "hr",
                "cs",
                "da",
                "nl",
                "en",
                "eo",
                "et",
                "fi",
                "fr",
                "fy",
                "gl",
                "ka",
                "de",
                "el",
                "gu",
                "ht",
                "ha",
                "haw",
                "iw",
                "hi",
                "hmn",
                "hu",
                "is",
                "ig",
                "id",
                "ga",
                "it",
                "ja",
                "jw",
                "kn",
                "kk",
                "km",
                "ko",
                "ku",
                "ky",
                "lo",
                "la",
                "lv",
                "lt",
                "lb",
                "mk",
                "mg",
                "ms",
                "ml",
                "mt",
                "mi",
                "mr",
                "mn",
                "my",
                "ne",
                "no",
                "ny",
                "ps",
                "fa",
                "pl",
                "pt",
                "pa",
                "ro",
                "ru",
                "sm",
                "gd",
                "sr",
                "st",
                "sn",
                "sd",
                "si",
                "sk",
                "sl",
                "so",
                "es",
                "su",
                "sw",
                "sv",
                "tl",
                "tg",
                "ta",
                "te",
                "th",
                "tr",
                "uk",
                "ur",
                "uz",
                "vi",
                "cy",
                "xh",
                "yi",
                "yo",
                "zu"
            ],
            "in": "query",
            "name": "language",
            "type": "string",
            "x-swgg-tags0": "google-translate"
        }
    },
    "paths": {
        "/$discovery/rest#google-translate": {
            "get": {
                "description": "discovery document.",
                "operationId": "_2F_24discovery_2Frest_23google-translate_20GET",
                "parameters": [
                    {
                        "default": "v2",
                        "description": "version",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-translate"
                ],
                "x-swgg-host": "translation.googleapis.com",
                "x-swgg-tags0": "google-translate"
            }
        },
        "/geolocation/v1/geolocate": {
            "post": {
                "description": "Geolocation API returns a location and accuracy radius based on information about cell towers and WiFi nodes that the mobile client can detect. This document describes the protocol used to send this data to the server and to return a response to the client.\n\nhttps://developers.google.com/maps/documentation/geolocation/intro",
                "operationId": "_2Fgeolocation_2Fv1_2Fgeolocate_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "description": "The request body must be formatted as JSON.",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/google-maps.GeolocationV1Geolocate"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "www.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/language/translate/v2": {
            "post": {
                "description": "Method: translate.\nTranslates input text, returning translated text.\n\nhttps://cloud.google.com/translate/docs/reference/translate",
                "operationId": "_2Flanguage_2Ftranslate_2Fv2_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "default": "hello world!",
                        "description": "The input text to translate. Repeat this parameter to perform translation operations on multiple text inputs.",
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "The language to use for translation of the input text, set to one of the language codes listed in Language Support (https://cloud.google.com/translate/docs/languages).",
                        "in": "query",
                        "name": "target",
                        "required": true,
                        "type": "string",
                        "x-swgg-$ref": "#/parameters/google-translate.language"
                    },
                    {
                        "description": "The format of the source text, in either HTML (default) or plain-text. A value of html indicates HTML and a value of text indicates plain-text.",
                        "enum": [
                            "html",
                            "text"
                        ],
                        "in": "query",
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "description": "The language of the source text, set to one of the language codes listed in Language Support (https://cloud.google.com/translate/docs/languages). If the source language is not specified, the API will attempt to detect the source language automatically and return it within the response.",
                        "in": "query",
                        "name": "source",
                        "type": "string",
                        "x-swgg-$ref": "#/parameters/google-translate.language"
                    },
                    {
                        "description": "The translation model. Can be either base to use the Phrase-Based Machine Translation (PBMT) model, or nmt to use the Neural Machine Translation (NMT) model. If omitted, then nmt is used.\n\nIf the model is nmt, and the requested language translation pair is not supported for the NMT model, then the request is translated using the base model.",
                        "enum": [
                            "nmt",
                            "base"
                        ],
                        "in": "query",
                        "name": "model",
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-translate"
                ],
                "x-swgg-host": "translation.googleapis.com",
                "x-swgg-tags0": "google-translate"
            }
        },
        "/language/translate/v2/detect": {
            "post": {
                "description": "Method: detect.\nDetects the language of text within a request.\n\nhttps://cloud.google.com/translate/docs/reference/detect",
                "operationId": "_2Flanguage_2Ftranslate_2Fv2_2Fdetect_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": [
                            "hello world!",
                            "你好，世界！"
                        ],
                        "description": "The input text upon which to perform language detection. Repeat this parameter to perform language detection on multiple text inputs.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "q",
                        "required": true,
                        "type": "array"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-translate"
                ],
                "x-swgg-host": "translation.googleapis.com",
                "x-swgg-tags0": "google-translate"
            }
        },
        "/language/translate/v2/languages": {
            "post": {
                "description": "Method: languages.\nReturns a list of supported languages for translation.\n\nhttps://cloud.google.com/translate/docs/reference/languages",
                "operationId": "_2Flanguage_2Ftranslate_2Fv2_2Flanguages_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "description": "The target language code for the results. If specified, then the language names are returned in the name field of the response, localized in the target language. If you do not supply a target language, then the name field is omitted from the response and only the language codes are returned.",
                        "in": "query",
                        "name": "target",
                        "type": "string",
                        "x-swgg-$ref": "#/parameters/google-translate.language"
                    },
                    {
                        "description": "The translation model of the supported languages. Can be either base to return languages supported by the Phrase-Based Machine Translation (PBMT) model, or nmt to return languages supported by the Neural Machine Translation (NMT) model. If omitted, then all supported languages are returned.\n\nLanguages supported by the NMT model can only be translated to or from English (en).",
                        "enum": [
                            "nmt",
                            "base"
                        ],
                        "in": "query",
                        "name": "model",
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-translate"
                ],
                "x-swgg-host": "translation.googleapis.com",
                "x-swgg-tags0": "google-translate"
            }
        },
        "/maps/api/directions/json": {
            "get": {
                "description": "Directions API is a service that calculates directions between locations using an HTTP request.\n\nhttps://developers.google.com/maps/documentation/directions/intro",
                "operationId": "_2Fmaps_2Fapi_2Fdirections_2Fjson_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "1600+Amphitheatre+Parkway,+Mountain+View,+CA",
                        "description": "The address, textual latitude/longitude value, or place ID from which you wish to calculate directions.",
                        "in": "query",
                        "name": "origin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The address, textual latitude/longitude value, or place ID to which you wish to calculate directions. The options for the destination parameter are the same as for the origin parameter, described above.",
                        "in": "query",
                        "name": "destination",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "driving",
                        "description": "Specifies the mode of transport to use when calculating directions.\n\nhttps://developers.google.com/maps/documentation/directions/intro#TravelModes",
                        "enum": [
                            "driving",
                            "walking",
                            "bicycling",
                            "transit"
                        ],
                        "in": "query",
                        "name": "mode",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "Mountain View, CA",
                            "Las Vegas, NV"
                        ],
                        "description": "Specifies an array of waypoints. Waypoints alter a route by routing it through the specified location(s). A waypoint is specified as a latitude/longitude coordinate, an encoded polyline, a place ID, or an address which will be geocoded. Encoded polylines must be prefixed with enc: and followed by a colon (:). Place IDs must be prefixed with place_id:. The place ID may only be specified if the request includes an API key or a Google Maps APIs Premium Plan client ID. Waypoints are only supported for driving, walking and bicycling directions.\n\nhttps://developers.google.com/maps/documentation/directions/intro#Waypoints",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "waypoints",
                        "type": "array"
                    },
                    {
                        "description": "If set to true, specifies that the Directions service may provide more than one route alternative in the response. Note that providing route alternatives may increase the response time from the server.",
                        "in": "query",
                        "name": "alternatives",
                        "type": "boolean"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "Indicates that the calculated route(s) should avoid the indicated features.\n\nhttps://developers.google.com/maps/documentation/directions/intro#Restrictions",
                        "enum": [
                            "tolls",
                            "highways",
                            "ferries",
                            "indoor"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "avoid",
                        "type": "array"
                    },
                    {
                        "description": "Specifies the unit system to use when displaying results.\n\nhttps://developers.google.com/maps/documentation/directions/intro#UnitSystems",
                        "enum": [
                            "metric",
                            "imperial"
                        ],
                        "in": "query",
                        "name": "units",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    },
                    {
                        "default": 0,
                        "description": "Specifies the desired time of arrival for transit directions, in seconds since midnight, January 1, 1970 UTC. You can specify either departure_time or arrival_time, but not both. Note that arrival_time must be specified as an integer.",
                        "in": "query",
                        "name": "arrival_time",
                        "type": "integer"
                    },
                    {
                        "default": "now",
                        "description": "Specifies the desired time of departure. You can specify the time as an integer in seconds since midnight, January 1, 1970 UTC. Alternatively, you can specify a value of now, which sets the departure time to the current time (correct to the nearest second).",
                        "in": "query",
                        "name": "departure_time",
                        "type": "string"
                    },
                    {
                        "description": "Specifies the assumptions to use when calculating time in traffic. This setting affects the value returned in the duration_in_traffic field in the response, which contains the predicted time in traffic based on historical averages. The traffic_model parameter may only be specified for driving directions where the request includes a departure_time, and only if the request includes an API key or a Google Maps APIs Premium Plan client ID.",
                        "enum": [
                            "best_guess",
                            "pessimistic",
                            "optimistic"
                        ],
                        "in": "query",
                        "name": "traffic_model",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "Specifies one or more preferred modes of transit. This parameter may only be specified for transit directions, and only if the request includes an API key or a Google Maps APIs Premium Plan client ID.",
                        "enum": [
                            "bus",
                            "subway",
                            "train",
                            "tram",
                            "rail"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "transit_mode",
                        "type": "array"
                    },
                    {
                        "description": "Specifies preferences for transit routes. Using this parameter, you can bias the options returned, rather than accepting the default best route chosen by the API. This parameter may only be specified for transit directions, and only if the request includes an API key or a Google Maps APIs Premium Plan client ID.",
                        "enum": [
                            "less_walking",
                            "fewer_transfers"
                        ],
                        "in": "query",
                        "name": "transit_routing_preference",
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/distancematrix/json": {
            "get": {
                "description": "Distance Matrix API is a service that provides travel distance and time for a matrix of origins and destinations.\n\nhttps://developers.google.com/maps/documentation/distance-matrix/intro#DistanceMatrixRequests",
                "operationId": "_2Fmaps_2Fapi_2Fdistancematrix_2Fjson_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "Bobcaygeon+ON",
                            "24+Sussex+Drive+Ottawa+ON",
                            "41.43206,-81.38992",
                            "-33.86748,151.20699",
                            "place_id:ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                            "enc:gfo}EtohhU:"
                        ],
                        "description": "The starting point for calculating travel distance and time. You can supply one or more locations separated by the pipe character (|), in the form of an address, latitude/longitude coordinates, or a place ID",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "origins",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "Bobcaygeon+ON",
                            "24+Sussex+Drive+Ottawa+ON",
                            "41.43206,-81.38992",
                            "-33.86748,151.20699",
                            "place_id:ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                            "enc:gfo}EtohhU:"
                        ],
                        "description": "One or more locations to use as the finishing point for calculating travel distance and time. The options for the destinations parameter are the same as for the origins parameter, described above.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "destinations",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "driving",
                        "description": "Specifies the mode of transport to use when calculating directions.\n\nhttps://developers.google.com/maps/documentation/directions/intro#TravelModes",
                        "enum": [
                            "driving",
                            "walking",
                            "bicycling",
                            "transit"
                        ],
                        "in": "query",
                        "name": "mode",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "Indicates that the calculated route(s) should avoid the indicated features.\n\nhttps://developers.google.com/maps/documentation/directions/intro#Restrictions",
                        "enum": [
                            "tolls",
                            "highways",
                            "ferries",
                            "indoor"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "avoid",
                        "type": "array"
                    },
                    {
                        "description": "Specifies the unit system to use when displaying results.\n\nhttps://developers.google.com/maps/documentation/directions/intro#UnitSystems",
                        "enum": [
                            "metric",
                            "imperial"
                        ],
                        "in": "query",
                        "name": "units",
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Specifies the desired time of arrival for transit directions, in seconds since midnight, January 1, 1970 UTC. You can specify either departure_time or arrival_time, but not both. Note that arrival_time must be specified as an integer.",
                        "in": "query",
                        "name": "arrival_time",
                        "type": "integer"
                    },
                    {
                        "default": "now",
                        "description": "Specifies the desired time of departure. You can specify the time as an integer in seconds since midnight, January 1, 1970 UTC. Alternatively, you can specify a value of now, which sets the departure time to the current time (correct to the nearest second).",
                        "in": "query",
                        "name": "departure_time",
                        "type": "string"
                    },
                    {
                        "description": "Specifies the assumptions to use when calculating time in traffic. This setting affects the value returned in the duration_in_traffic field in the response, which contains the predicted time in traffic based on historical averages. The traffic_model parameter may only be specified for driving directions where the request includes a departure_time, and only if the request includes an API key or a Google Maps APIs Premium Plan client ID.",
                        "enum": [
                            "best_guess",
                            "pessimistic",
                            "optimistic"
                        ],
                        "in": "query",
                        "name": "traffic_model",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "Specifies one or more preferred modes of transit. This parameter may only be specified for transit directions, and only if the request includes an API key or a Google Maps APIs Premium Plan client ID.",
                        "enum": [
                            "bus",
                            "subway",
                            "train",
                            "tram",
                            "rail"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "transit_mode",
                        "type": "array"
                    },
                    {
                        "description": "Specifies preferences for transit routes. Using this parameter, you can bias the options returned, rather than accepting the default best route chosen by the API. This parameter may only be specified for transit directions, and only if the request includes an API key or a Google Maps APIs Premium Plan client ID.",
                        "enum": [
                            "less_walking",
                            "fewer_transfers"
                        ],
                        "in": "query",
                        "name": "transit_routing_preference",
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/elevation/json#locations.required": {
            "get": {
                "description": "Elevation API provides a simple interface to query locations on the earth for elevation data. Additionally, you may request sampled elevation data along paths, allowing you to calculate elevation changes along routes.\n\nhttps://developers.google.com/maps/documentation/elevation/intro",
                "operationId": "_2Fmaps_2Fapi_2Felevation_2Fjson_23locations.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "40.714728,-73.998672",
                            "-34.397,150.644"
                        ],
                        "description": "defines the location(s) on the earth from which to return elevation data. This parameter takes either a single location as a comma-separated {latitude,longitude} pair (e.g. \"40.714728,-73.998672\") or multiple latitude/longitude pairs passed as an array or as an encoded polyline.\n\nhttps://developers.google.com/maps/documentation/elevation/intro#Locations",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "locations",
                        "required": true,
                        "type": "array"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/elevation/json#path.required": {
            "get": {
                "description": "Elevation API provides a simple interface to query locations on the earth for elevation data. Additionally, you may request sampled elevation data along paths, allowing you to calculate elevation changes along routes.\n\nhttps://developers.google.com/maps/documentation/elevation/intro",
                "operationId": "_2Fmaps_2Fapi_2Felevation_2Fjson_23path.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "40.714728,-73.998672",
                            "-34.397,150.644"
                        ],
                        "description": "defines a path on the earth for which to return elevation data. This parameter defines a set of two or more ordered {latitude,longitude} pairs defining a path along the surface of the earth. This parameter must be used in conjunction with the samples parameter described below.\n\nhttps://developers.google.com/maps/documentation/elevation/intro#Paths",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "path",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": 10,
                        "description": "specifies the number of sample points along a path for which to return elevation data. The samples parameter divides the given path into an ordered set of equidistant points along the path.",
                        "in": "query",
                        "name": "samples",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/geocode/json#address.required": {
            "get": {
                "description": "Geocoding API.\n\nGeocoding (Latitude/Longitude Lookup)\n\nRequired parameters in a geocoding request:\n\naddress — The street address that you want to geocode, in the format used by the national postal service of the country concerned. Additional address elements such as business names and unit, suite or floor numbers should be avoided. Please refer to the FAQ (https://developers.google.com/maps/faq#geocoder_queryformat) for additional guidance. \n     or \ncomponents — A components filter with elements separated by a pipe (|). The components filter is also accepted as an optional parameter if an address is provided. Each element in the components filter consists of a component:value pair, and fully restricts the results from the geocoder. See more information about component filtering (https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering) below.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#geocoding",
                "operationId": "_2Fmaps_2Fapi_2Fgeocode_2Fjson_23address.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "1600+Amphitheatre+Parkway,+Mountain+View,+CA",
                        "description": "The street address that you want to geocode, in the format used by the national postal service of the country concerned. Additional address elements such as business names and unit, suite or floor numbers should be avoided.\n\nhttps://developers.google.com/maps/faq#geocoder_queryformat",
                        "in": "query",
                        "name": "address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "street_number:1600",
                            "route:Amphitheatre+Parkway",
                            "locality:Mountain+View",
                            "administrative_area_level_1:CA",
                            "country:US"
                        ],
                        "description": "A components filter with elements separated by a pipe (|). The components filter is also accepted as an optional parameter if an address is provided. Each element in the components filter consists of a component:value pair, and fully restricts the results from the geocoder.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "components",
                        "type": "array"
                    },
                    {
                        "default": "-90,-180|90,180",
                        "description": "The bounding box of the viewport within which to bias geocode results more prominently. This parameter will only influence, not fully restrict, results from the geocoder.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#Viewports",
                        "in": "query",
                        "name": "bounds",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/geocode/json#components.required": {
            "get": {
                "description": "Geocoding API.\n\nGeocoding (Latitude/Longitude Lookup)\n\nRequired parameters in a geocoding request:\n\naddress — The street address that you want to geocode, in the format used by the national postal service of the country concerned. Additional address elements such as business names and unit, suite or floor numbers should be avoided. Please refer to the FAQ (https://developers.google.com/maps/faq#geocoder_queryformat) for additional guidance. \n     or \ncomponents — A components filter with elements separated by a pipe (|). The components filter is also accepted as an optional parameter if an address is provided. Each element in the components filter consists of a component:value pair, and fully restricts the results from the geocoder. See more information about component filtering (https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering) below.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#geocoding",
                "operationId": "_2Fmaps_2Fapi_2Fgeocode_2Fjson_23components.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "street_number:1600",
                            "route:Amphitheatre+Parkway",
                            "locality:Mountain+View",
                            "administrative_area_level_1:CA",
                            "country:US"
                        ],
                        "description": "A components filter with elements separated by a pipe (|). The components filter is also accepted as an optional parameter if an address is provided. Each element in the components filter consists of a component:value pair, and fully restricts the results from the geocoder.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "components",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "-90,-180|90,180",
                        "description": "The bounding box of the viewport within which to bias geocode results more prominently. This parameter will only influence, not fully restrict, results from the geocoder.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#Viewports",
                        "in": "query",
                        "name": "bounds",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/geocode/json#latlng.required": {
            "get": {
                "description": "Geocoding API.\n\nReverse Geocoding (Address Lookup)\n\nThe term geocoding generally refers to translating a human-readable address into a location on a map. The process of doing the opposite, translating a location on the map into a human-readable address, is known as reverse geocoding.\n\nRequired parameters in a reverse geocoding request:\n\nlatlng — The latitude and longitude values specifying the location for which you wish to obtain the closest, human-readable address.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#ReverseGeocoding",
                "operationId": "_2Fmaps_2Fapi_2Fgeocode_2Fjson_23latlng.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude and longitude values specifying the location for which you wish to obtain the closest, human-readable address.",
                        "in": "query",
                        "name": "latlng",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "A filter of one or more address types, separated by a pipe (|). If the parameter contains multiple address types, the API returns all addresses that match any of the types. A note about processing: The result_type parameter does not restrict the search to the specified address type(s). Rather, the result_type acts as a post-search filter: the API fetches all results for the specified latlng, then discards those results that do not match the specified address type(s). Note: This parameter is available only for requests that include an API key or a client ID.",
                        "enum": [
                            "street_address",
                            "route",
                            "intersection",
                            "political",
                            "country",
                            "administrative_area_level_1",
                            "administrative_area_level_2",
                            "administrative_area_level_3",
                            "administrative_area_level_4",
                            "administrative_area_level_5",
                            "colloquial_area",
                            "locality",
                            "ward",
                            "sublocality",
                            "neighborhood",
                            "premise",
                            "subpremise",
                            "postal_code",
                            "natural_feature",
                            "airport",
                            "park",
                            "point_of_interest"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "result_type",
                        "type": "array"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "A filter of one or more location types, separated by a pipe (|). If the parameter contains multiple location types, the API returns all addresses that match any of the types. A note about processing: The location_type parameter does not restrict the search to the specified location type(s). Rather, the location_type acts as a post-search filter: the API fetches all results for the specified latlng, then discards those results that do not match the specified location type(s). Note: This parameter is available only for requests that include an API key or a client ID.",
                        "enum": [
                            "ROOFTOP",
                            "RANGE_INTERPOLATED",
                            "GEOMETRIC_CENTER",
                            "APPROXIMATE"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "location_type",
                        "type": "array"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/geocode/json#place_id.required": {
            "get": {
                "description": "Geocoding API.\n\nRetrieving an Address for a Place ID\n\nRequired parameters:\n\nplace_id — The place ID of the place for which you wish to obtain the human-readable address. The place ID is a unique identifier that can be used with other Google APIs. For example, you can use the placeID returned by the Google Maps Roads API (https://developers.google.com/maps/documentation/roads/snap) to get the address for a snapped point. For more information about place IDs, see the place ID overview (https://developers.google.com/places/place-id). The place ID may only be specified if the request includes an API key or a Google Maps APIs Premium Plan client ID.\n\nhttps://developers.google.com/maps/documentation/geocoding/intro#place-id",
                "operationId": "_2Fmaps_2Fapi_2Fgeocode_2Fjson_23place_id.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "ChIJPzxqWQK6j4AR3OFRJ6LMaKo",
                        "description": "The place ID of the place for which you wish to obtain the human-readable address. The place ID is a unique identifier that can be used with other Google APIs. For example, you can use the placeID returned by the Google Maps Roads API to get the address for a snapped point.\n\nhttps://developers.google.com/places/web-service/place-id",
                        "in": "query",
                        "name": "place_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "A filter of one or more address types, separated by a pipe (|). If the parameter contains multiple address types, the API returns all addresses that match any of the types. A note about processing: The result_type parameter does not restrict the search to the specified address type(s). Rather, the result_type acts as a post-search filter: the API fetches all results for the specified latlng, then discards those results that do not match the specified address type(s). Note: This parameter is available only for requests that include an API key or a client ID.",
                        "enum": [
                            "street_address",
                            "route",
                            "intersection",
                            "political",
                            "country",
                            "administrative_area_level_1",
                            "administrative_area_level_2",
                            "administrative_area_level_3",
                            "administrative_area_level_4",
                            "administrative_area_level_5",
                            "colloquial_area",
                            "locality",
                            "ward",
                            "sublocality",
                            "neighborhood",
                            "premise",
                            "subpremise",
                            "postal_code",
                            "natural_feature",
                            "airport",
                            "park",
                            "point_of_interest"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "result_type",
                        "type": "array"
                    },
                    {
                        "collectionFormat": "pipes",
                        "description": "A filter of one or more location types, separated by a pipe (|). If the parameter contains multiple location types, the API returns all addresses that match any of the types. A note about processing: The location_type parameter does not restrict the search to the specified location type(s). Rather, the location_type acts as a post-search filter: the API fetches all results for the specified latlng, then discards those results that do not match the specified location type(s). Note: This parameter is available only for requests that include an API key or a client ID.",
                        "enum": [
                            "ROOFTOP",
                            "RANGE_INTERPOLATED",
                            "GEOMETRIC_CENTER",
                            "APPROXIMATE"
                        ],
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "location_type",
                        "type": "array"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/autocomplete/json": {
            "get": {
                "description": "Places API Autocomplete service is a web service that returns place predictions in response to an HTTP request. The request specifies a textual search string and optional geographic bounds. The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types.\n\nhttps://developers.google.com/places/web-service/autocomplete",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fautocomplete_2Fjson_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "Amoeba",
                        "description": "The text string on which to search. The Place Autocomplete service will return candidate matches based on this string and order results based on their perceived relevance.",
                        "in": "query",
                        "name": "input",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The position, in the input term, of the last character that the service uses to match predictions. For example, if the input is 'Google' and the offset is 3, the service will match on 'Goo'. The string determined by the offset is matched against the first word in the input term only. For example, if the input term is 'Google abc' and the offset is 3, the service will attempt to match against 'Goo abc'. If no offset is supplied, the service will use the whole term. The offset should generally be set to the position of the text caret.",
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude.",
                        "in": "query",
                        "name": "location",
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "The distance (in meters) within which to return place results. Note that setting a radius biases results to the indicated area, but may not fully restrict results to the specified area.",
                        "in": "query",
                        "name": "radius",
                        "type": "integer"
                    },
                    {
                        "description": "The types of place results to return. See Place Types below. If no type is specified, all types will be returned.\n\nhttps://developers.google.com/places/web-service/autocomplete#place_types",
                        "enum": [
                            "geocode",
                            "address",
                            "establishment",
                            "(regions)",
                            "(cities)"
                        ],
                        "in": "query",
                        "name": "types",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "country:us",
                            "country:pr",
                            "country:vi",
                            "country:gu",
                            "country:mp"
                        ],
                        "description": "A grouping of places to which you would like to restrict your results. Currently, you can use components to filter by up to 5 countries. Countries must be passed as a two character, ISO 3166-1 Alpha-2 compatible country code. For example: components=country:fr would restrict your results to places within France. Multiple countries must be passed as multiple country:XX filters, with the pipe character (|) as a separator. For example: components=country:us|country:pr|country:vi|country:gu|country:mp would restrict your results to places within the United States and its unincorporated organized territories.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "components",
                        "type": "array"
                    },
                    {
                        "description": "Returns only those places that are strictly within the region defined by location and radius. This is a restriction, rather than a bias, meaning that results outside this region will not be returned even if they match the user input.",
                        "in": "query",
                        "name": "strictbounds",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/details/json#placeid.required": {
            "get": {
                "description": "Places API Details.\nOnce you have a place_id or a reference from a Place Search, you can request more details about a particular establishment or point of interest by initiating a Place Details request. A Place Details request returns more comprehensive information about the indicated place such as its complete address, phone number, user rating and reviews.\n\nhttps://developers.google.com/places/web-service/details",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fdetails_2Fjson_23placeid.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "ChIJPzxqWQK6j4AR3OFRJ6LMaKo",
                        "description": "The place ID of the place for which you wish to obtain the human-readable address. The place ID is a unique identifier that can be used with other Google APIs. For example, you can use the placeID returned by the Google Maps Roads API to get the address for a snapped point.\n\nhttps://developers.google.com/places/web-service/place-id",
                        "in": "query",
                        "name": "placeid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/details/json#reference.required": {
            "get": {
                "description": "Places API Details.\nOnce you have a place_id or a reference from a Place Search, you can request more details about a particular establishment or point of interest by initiating a Place Details request. A Place Details request returns more comprehensive information about the indicated place such as its complete address, phone number, user rating and reviews.\n\nhttps://developers.google.com/places/web-service/details",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fdetails_2Fjson_23reference.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "CmRSAAAAjiEr2_A4yI-DyqGcfsceTv-IBJXHB5-W3ckmGk9QAYk4USgeV8ihBcGBEK5Z1w4ajRZNVAfSbROiKbbuniq0c9rIq_xqkrf_3HpZzX-pFJuJY3cBtG68LSAHzWXB8UzwEhAx04rgN0_WieYLfVp4K0duGhTU58LFaqwcaex73Kcyy0ghYOQTkg",
                        "in": "query",
                        "name": "reference",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/nearbysearch/json#pagetoken.required": {
            "get": {
                "description": "Places API Nearby Search lets you search for places within a specified area. You can refine your search request by supplying keywords or specifying the type of place you are searching for.\n\nhttps://developers.google.com/places/web-service/search#PlaceSearchRequests",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fnearbysearch_2Fjson_23pagetoken.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "default": "CpQCAgEAAFxg8o-eU7_uKn7Yqjana-HQIx1hr5BrT4zBaEko29ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk-ReY7oulyuvKSQrw1lgJElggGlo0d6indiH1U-tDwquw4tU_UXoQ_sj8OBo8XBUuWjuuFShqmLMP-0W59Vr6CaXdLrF8M3wFR4dUUhSf5UC4QCLaOMVP92lyh0OdtF_m_9Dt7lz-Wniod9zDrHeDsz_by570K3jL1VuDKTl_U1cJ0mzz_zDHGfOUf7VU1kVIs1WnM9SGvnm8YZURLTtMLMWx8-doGUE56Af_VfKjGDYW361OOIj9GmkyCFtaoCmTMIr5kgyeUSnB-IEhDlzujVrV6O9Mt7N4DagR6RGhT3g1viYLS4kO5YindU6dm3GIof1Q",
                        "description": "Returns the next 20 results from a previously run search. Setting a pagetoken parameter will execute a search with the same parameters used previously — all parameters other than pagetoken will be ignored.\n\nhttps://developers.google.com/places/web-service/search#PlaceSearchPaging",
                        "in": "query",
                        "name": "pagetoken",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/nearbysearch/json#radius.required": {
            "get": {
                "description": "Places API Nearby Search lets you search for places within a specified area. You can refine your search request by supplying keywords or specifying the type of place you are searching for.\n\nhttps://developers.google.com/places/web-service/search#PlaceSearchRequests",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fnearbysearch_2Fjson_23radius.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude.",
                        "in": "query",
                        "name": "location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 1000,
                        "description": "Defines the distance (in meters) within which to return place results. The maximum allowed radius is 50 000 meters.",
                        "in": "query",
                        "name": "radius",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": "restaurant",
                        "description": "A term to be matched against all content that Google has indexed for this place, including but not limited to name, type, and address, as well as customer reviews and other third-party content.",
                        "in": "query",
                        "name": "keyword",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.minprice"
                    },
                    {
                        "$ref": "#/parameters/google-maps.maxprice"
                    },
                    {
                        "description": "Returns only those places that are open for business at the time the query is sent. Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query.",
                        "in": "query",
                        "name": "opennow",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/google-maps.type"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/nearbysearch/json#rankby.required": {
            "get": {
                "description": "Places API Nearby Search lets you search for places within a specified area. You can refine your search request by supplying keywords or specifying the type of place you are searching for.\n\nhttps://developers.google.com/places/web-service/search#PlaceSearchRequests",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fnearbysearch_2Fjson_23rankby.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude.",
                        "in": "query",
                        "name": "location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "distance",
                        "description": "Specifies the order in which results are listed.",
                        "enum": [
                            "distance"
                        ],
                        "in": "query",
                        "name": "rankby",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "restaurant",
                        "description": "A term to be matched against all content that Google has indexed for this place, including but not limited to name, type, and address, as well as customer reviews and other third-party content.",
                        "in": "query",
                        "name": "keyword",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/google-maps.minprice"
                    },
                    {
                        "$ref": "#/parameters/google-maps.maxprice"
                    },
                    {
                        "description": "Returns only those places that are open for business at the time the query is sent. Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query.",
                        "in": "query",
                        "name": "opennow",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/google-maps.type"
                    },
                    {
                        "$ref": "#/parameters/google-maps.region"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/photo#maxheight.required": {
            "get": {
                "description": "Places API Photo service, part of the Google Places API Web Service, is a read- only API that allows you to add high quality photographic content to your application. The Place Photo service gives you access to the millions of photos stored in the Places database. When you get place information using a Place Details request, photo references will be returned for relevant photographic content. The Nearby Search and Text Search requests also return a single photo reference per place, when relevant. Using the Photo service you can then access the referenced photos and resize the image to the optimal size for your application.\n\nhttps://developers.google.com/places/web-service/photos",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fphoto_23maxheight.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "default": "CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU",
                        "description": "A string identifier that uniquely identifies a photo. Photo references are returned from either a Place Search or Place Details request.",
                        "in": "query",
                        "name": "photoreference",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Specifies the maximum desired height or width, in pixels, of the image returned by the Place Photos service. If the image is smaller than the values specified, the original image will be returned. If the image is larger in either dimension, it will be scaled to match the smaller of the two dimensions, restricted to its original aspect ratio. Both the maxheight and maxwidth properties accept an integer between 1 and 1600.",
                        "in": "query",
                        "name": "maxheight",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/photo#maxwidth.required": {
            "get": {
                "description": "Places API Photo service, part of the Google Places API Web Service, is a read- only API that allows you to add high quality photographic content to your application. The Place Photo service gives you access to the millions of photos stored in the Places database. When you get place information using a Place Details request, photo references will be returned for relevant photographic content. The Nearby Search and Text Search requests also return a single photo reference per place, when relevant. Using the Photo service you can then access the referenced photos and resize the image to the optimal size for your application.\n\nhttps://developers.google.com/places/web-service/photos",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fphoto_23maxwidth.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "default": "CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU",
                        "description": "A string identifier that uniquely identifies a photo. Photo references are returned from either a Place Search or Place Details request.",
                        "in": "query",
                        "name": "photoreference",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Specifies the maximum desired height or width, in pixels, of the image returned by the Place Photos service. If the image is smaller than the values specified, the original image will be returned. If the image is larger in either dimension, it will be scaled to match the smaller of the two dimensions, restricted to its original aspect ratio. Both the maxheight and maxwidth properties accept an integer between 1 and 1600.",
                        "in": "query",
                        "name": "maxwidth",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/queryautocomplete/json": {
            "get": {
                "description": "Places API Query Autocomplete service can be used to provide a query prediction for text-based geographic searches, by returning suggested queries as you type.\n\nhttps://developers.google.com/places/web-service/query",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Fqueryautocomplete_2Fjson_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "Amoeba",
                        "description": "The text string on which to search. The Place Autocomplete service will return candidate matches based on this string and order results based on their perceived relevance.",
                        "in": "query",
                        "name": "input",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The position, in the input term, of the last character that the service uses to match predictions. For example, if the input is 'Google' and the offset is 3, the service will match on 'Goo'. The string determined by the offset is matched against the first word in the input term only. For example, if the input term is 'Google abc' and the offset is 3, the service will attempt to match against 'Goo abc'. If no offset is supplied, the service will use the whole term. The offset should generally be set to the position of the text caret.",
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude.",
                        "in": "query",
                        "name": "location",
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "The distance (in meters) within which to return place results. Note that setting a radius biases results to the indicated area, but may not fully restrict results to the specified area.",
                        "in": "query",
                        "name": "radius",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/textsearch/json#pagetoken.required": {
            "get": {
                "description": "Places API Text Search Service is a web service that returns information about a set of places based on a string — for example \"pizza in New York\" or \"shoe stores near Ottawa\" or \"123 Main Street\". The service responds with a list of places matching the text string and any location bias that has been set. The service is especially useful for making ambiguous address queries in an automated system, and non-address components of the string may match businesses as well as addresses. Examples of ambiguous address queries are incomplete addresses, poorly formatted addresses, or a request that includes non-address components such as business names. The search response will include a list of places. You can send a Place Details request for more information about any of the places in the response.\n\nhttps://developers.google.com/places/web-service/search#TextSearchRequests",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Ftextsearch_2Fjson_23pagetoken.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "default": "CpQCAgEAAFxg8o-eU7_uKn7Yqjana-HQIx1hr5BrT4zBaEko29ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk-ReY7oulyuvKSQrw1lgJElggGlo0d6indiH1U-tDwquw4tU_UXoQ_sj8OBo8XBUuWjuuFShqmLMP-0W59Vr6CaXdLrF8M3wFR4dUUhSf5UC4QCLaOMVP92lyh0OdtF_m_9Dt7lz-Wniod9zDrHeDsz_by570K3jL1VuDKTl_U1cJ0mzz_zDHGfOUf7VU1kVIs1WnM9SGvnm8YZURLTtMLMWx8-doGUE56Af_VfKjGDYW361OOIj9GmkyCFtaoCmTMIr5kgyeUSnB-IEhDlzujVrV6O9Mt7N4DagR6RGhT3g1viYLS4kO5YindU6dm3GIof1Q",
                        "description": "Returns the next 20 results from a previously run search. Setting a pagetoken parameter will execute a search with the same parameters used previously — all parameters other than pagetoken will be ignored.\n\nhttps://developers.google.com/places/web-service/search#PlaceSearchPaging",
                        "in": "query",
                        "name": "pagetoken",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/textsearch/json#query.required": {
            "get": {
                "description": "Places API Text Search Service is a web service that returns information about a set of places based on a string — for example \"pizza in New York\" or \"shoe stores near Ottawa\" or \"123 Main Street\". The service responds with a list of places matching the text string and any location bias that has been set. The service is especially useful for making ambiguous address queries in an automated system, and non-address components of the string may match businesses as well as addresses. Examples of ambiguous address queries are incomplete addresses, poorly formatted addresses, or a request that includes non-address components such as business names. The search response will include a list of places. You can send a Place Details request for more information about any of the places in the response.\n\nhttps://developers.google.com/places/web-service/search#TextSearchRequests",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Ftextsearch_2Fjson_23query.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "default": "123 Main Street",
                        "description": "The text string on which to search, for example: \"restaurant\" or \"123 Main Street\". The Google Places service will return candidate matches based on this string and order the results based on their perceived relevance. This parameter becomes optional if the type parameter is also used in the search request.",
                        "in": "query",
                        "name": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude.",
                        "in": "query",
                        "name": "location",
                        "type": "string"
                    },
                    {
                        "default": 1000,
                        "description": "Defines the distance (in meters) within which to return place results. The maximum allowed radius is 50 000 meters.",
                        "in": "query",
                        "name": "radius",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/google-maps.minprice"
                    },
                    {
                        "$ref": "#/parameters/google-maps.maxprice"
                    },
                    {
                        "description": "Returns only those places that are open for business at the time the query is sent. Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query.",
                        "in": "query",
                        "name": "opennow",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/google-maps.type"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/place/textsearch/json#type.required": {
            "get": {
                "description": "Places API Text Search Service is a web service that returns information about a set of places based on a string — for example \"pizza in New York\" or \"shoe stores near Ottawa\" or \"123 Main Street\". The service responds with a list of places matching the text string and any location bias that has been set. The service is especially useful for making ambiguous address queries in an automated system, and non-address components of the string may match businesses as well as addresses. Examples of ambiguous address queries are incomplete addresses, poorly formatted addresses, or a request that includes non-address components such as business names. The search response will include a list of places. You can send a Place Details request for more information about any of the places in the response.\n\nhttps://developers.google.com/places/web-service/search#TextSearchRequests",
                "operationId": "_2Fmaps_2Fapi_2Fplace_2Ftextsearch_2Fjson_23type.required_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    },
                    {
                        "$ref": "#/parameters/google-maps.type"
                    },
                    {
                        "default": "37.421,-122.085",
                        "description": "The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude.",
                        "in": "query",
                        "name": "location",
                        "type": "string"
                    },
                    {
                        "default": 1000,
                        "description": "Defines the distance (in meters) within which to return place results. The maximum allowed radius is 50 000 meters.",
                        "in": "query",
                        "name": "radius",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/google-maps.minprice"
                    },
                    {
                        "$ref": "#/parameters/google-maps.maxprice"
                    },
                    {
                        "description": "Returns only those places that are open for business at the time the query is sent. Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query.",
                        "in": "query",
                        "name": "opennow",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/maps/api/timezone/json": {
            "get": {
                "description": "Time Zone API provides a simple interface to request the time zone for a location on the earth, as well as that location's time offset from UTC.\n\nhttps://developers.google.com/maps/documentation/timezone/intro",
                "operationId": "_2Fmaps_2Fapi_2Ftimezone_2Fjson_20GET",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "default": "-33.86,151.20",
                        "description": "a comma-separated lat,lng tuple (eg. location=-33.86,151.20), representing the location to look up.",
                        "in": "query",
                        "name": "location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "specifies the desired time as seconds since midnight, January 1, 1970 UTC. The Google Maps Time Zone API uses the timestamp to determine whether or not Daylight Savings should be applied, based on the time zone of the location. Note that the API does not take historical time zones into account. That is, if you specify a past timestamp, the API does not take into account the possibility that the location was previously in a different time zone.",
                        "in": "query",
                        "name": "timestamp",
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/google-maps.language"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "maps.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/v1/nearestRoads": {
            "post": {
                "description": "Roads API takes up to 100 independent coordinates, and returns the closest road segment for each point. The points passed do not need to be part of a continuous path.\n\nhttps://developers.google.com/maps/documentation/roads/nearest",
                "operationId": "_2Fv1_2FnearestRoads_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "60.170880,24.942795",
                            "60.170879,24.942796",
                            "60.170877,24.942796"
                        ],
                        "description": "A list of latitude/longitude pairs. Latitude and longitude values should be separated by commas. Coordinates should be separated by the pipe character: \"|\". For example: points=60.170880,24.942795|60.170879,24.942796|60.170877,24.942796.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "points",
                        "required": true,
                        "type": "array"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "roads.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/v1/snapToRoads": {
            "post": {
                "description": "Roads API takes up to 100 GPS points collected along a route, and returns a similar set of data, with the points snapped to the most likely roads the vehicle was traveling along. Optionally, you can request that the points be interpolated, resulting in a path that smoothly follows the geometry of the road.\n\nhttps://developers.google.com/maps/documentation/roads/snap",
                "operationId": "_2Fv1_2FsnapToRoads_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "60.170880,24.942795",
                            "60.170879,24.942796",
                            "60.170877,24.942796"
                        ],
                        "description": "The path to be snapped. The path parameter accepts a list of latitude/longitude pairs. Latitude and longitude values should be separated by commas. Coordinates should be separated by the pipe character: \"|\". For example: path=60.170880,24.942795|60.170879,24.942796|60.170877,24.942796.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "path",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "Whether to interpolate a path to include all points forming the full road-geometry. When true, additional interpolated points will also be returned, resulting in a path that smoothly follows the geometry of the road, even around corners and through tunnels. Interpolated paths will most likely contain more points than the original path. Defaults to false.",
                        "in": "query",
                        "name": "interpolate",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "roads.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/v1/speedLimits#path.required": {
            "post": {
                "description": "Roads API returns the posted speed limit for a given road segment. In the case of road segments with variable speed limits, the default speed limit for the segment is returned. The accuracy of speed limit data returned by the Google Maps Roads API cannot be guaranteed. The speed limit data provided is not real-time, and may be estimated, inaccurate, incomplete, and/or outdated. You may report inaccuracies in our speed limit data by filing a case in the Google Cloud Support Portal.\n\nhttps://developers.google.com/maps/documentation/roads/speed-limits",
                "operationId": "_2Fv1_2FspeedLimits_23path.required_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "pipes",
                        "default": [
                            "60.170880,24.942795",
                            "60.170879,24.942796",
                            "60.170877,24.942796"
                        ],
                        "description": "A list of latitude/longitude pairs representing a path. Latitude and longitude values must be separated by commas. Latitude/longitude pairs must be separated by the pipe character: \"|\". When you supply the path parameter, the API first snaps the path to the most likely road traveled by a vehicle (as it does for the snapToRoads request), then determines the speed limit for the relevant road segment. If you don't want the API to snap the path, you must pass a placeId parameter as explained below. The following example shows the path parameter with three latitude/longitude pairs: path=60.170880,24.942795|60.170879,24.942796|60.170877,24.942796.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "path",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "KPH",
                        "description": "Whether to return speed limits in kilometers or miles per hour. This can be set to either KPH or MPH. Defaults to KPH.",
                        "enum": [
                            "KPH",
                            "MPH"
                        ],
                        "in": "query",
                        "name": "units",
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "roads.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        },
        "/v1/speedLimits#placeId.required": {
            "post": {
                "description": "Roads API returns the posted speed limit for a given road segment. In the case of road segments with variable speed limits, the default speed limit for the segment is returned. The accuracy of speed limit data returned by the Google Maps Roads API cannot be guaranteed. The speed limit data provided is not real-time, and may be estimated, inaccurate, incomplete, and/or outdated. You may report inaccuracies in our speed limit data by filing a case in the Google Cloud Support Portal.\n\nhttps://developers.google.com/maps/documentation/roads/speed-limits",
                "operationId": "_2Fv1_2FspeedLimits_23placeId.required_20POST",
                "parameters": [
                    {
                        "$ref": "#/parameters/github-migrations.key"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": [
                            "ChIJX12duJAwGQ0Ra0d4Oi4jOGE",
                            "ChIJLQcticc0GQ0RoiNZJVa5GxU"
                        ],
                        "description": "The place ID(s) representing one or more road segments. Make sure each place ID refers to a road segment and not a different type of place. You can pass up to 100 place IDs with each request. The API does not perform road-snapping on the supplied place IDs. The response includes a speed limit for each place ID in the request. You can send a snapToRoads or nearestRoads request to find the relevant place IDs then supply them as input to the speedLimits request. The following example shows the placeId parameter with two place IDs: placeId=ChIJX12duJAwGQ0Ra0d4Oi4jOGE&placeId=ChIJLQcticc0GQ0RoiNZJVa5GxU",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "placeId",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "default": "KPH",
                        "description": "Whether to return speed limits in kilometers or miles per hour. This can be set to either KPH or MPH. Defaults to KPH.",
                        "enum": [
                            "KPH",
                            "MPH"
                        ],
                        "in": "query",
                        "name": "units",
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response"
                    }
                },
                "tags": [
                    "google-maps"
                ],
                "x-swgg-host": "roads.googleapis.com",
                "x-swgg-tags0": "google-maps"
            }
        }
    },
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "tags": [
        {
            "description": "Google Maps APIs.\n\nhttps://developers.google.com/maps/documentation/",
            "name": "google-maps",
            "x-swgg-tags0": "google-maps"
        },
        {
            "description": "The Google Cloud Translation API lets websites and programs integrate with Google Translate programmatically.\n\nhttps://cloud.google.com/translate/docs/reference/rest",
            "name": "google-translate",
            "x-swgg-tags0": "google-translate"
        }
    ],
    "x-swgg-operationIdFromPath": true,
    "x-swgg-tags0-override": {
        "google-maps": {
            "externalDocs": {
                "description": "Google Maps APIs.",
                "url": "https://developers.google.com/maps/documentation/"
            }
        },
        "google-translate": {
            "externalDocs": {
                "description": "The Google Cloud Translation API lets websites and programs integrate with Google Translate programmatically.",
                "url": "https://cloud.google.com/translate/docs/reference/rest"
            }
        }
    }
}
